//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5466
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MessengerLib
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConnectionResultData", Namespace="http://schemas.datacontract.org/2004/07/MessengerLib")]
    public partial struct ConnectionResultData : System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Guid groupGuidField;
        
        private System.Guid userSessionGuidField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid groupGuid
        {
            get
            {
                return this.groupGuidField;
            }
            set
            {
                this.groupGuidField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid userSessionGuid
        {
            get
            {
                return this.userSessionGuidField;
            }
            set
            {
                this.userSessionGuidField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConnectionRequestData", Namespace="http://schemas.datacontract.org/2004/07/MessengerLib")]
    public partial struct ConnectionRequestData : System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Guid groupGuidField;
        
        private string userFromField;
        
        private System.Guid userSessionGuidField;
        
        private string userToField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid groupGuid
        {
            get
            {
                return this.groupGuidField;
            }
            set
            {
                this.groupGuidField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userFrom
        {
            get
            {
                return this.userFromField;
            }
            set
            {
                this.userFromField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid userSessionGuid
        {
            get
            {
                return this.userSessionGuidField;
            }
            set
            {
                this.userSessionGuidField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userTo
        {
            get
            {
                return this.userToField;
            }
            set
            {
                this.userToField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageData", Namespace="http://schemas.datacontract.org/2004/07/MessengerLib")]
    public partial struct MessageData : System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Guid groupGuidField;
        
        private string messageField;
        
        private string useridField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid groupGuid
        {
            get
            {
                return this.groupGuidField;
            }
            set
            {
                this.groupGuidField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string message
        {
            get
            {
                return this.messageField;
            }
            set
            {
                this.messageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userid
        {
            get
            {
                return this.useridField;
            }
            set
            {
                this.useridField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StrokeData", Namespace="http://schemas.datacontract.org/2004/07/MessengerLib")]
    public partial struct StrokeData : System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Guid groupGuidField;
        
        private string useridField;
        
        private int[] xField;
        
        private int[] yField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid groupGuid
        {
            get
            {
                return this.groupGuidField;
            }
            set
            {
                this.groupGuidField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userid
        {
            get
            {
                return this.useridField;
            }
            set
            {
                this.useridField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] x
        {
            get
            {
                return this.xField;
            }
            set
            {
                this.xField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] y
        {
            get
            {
                return this.yField;
            }
            set
            {
                this.yField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BGImgChunk", Namespace="http://schemas.datacontract.org/2004/07/MessengerLib")]
    public partial struct BGImgChunk : System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private byte[] dataField;
        
        private System.Guid groupGuidField;
        
        private int lenField;
        
        private int offsetField;
        
        private int totalField;
        
        private string useridField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] data
        {
            get
            {
                return this.dataField;
            }
            set
            {
                this.dataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid groupGuid
        {
            get
            {
                return this.groupGuidField;
            }
            set
            {
                this.groupGuidField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int len
        {
            get
            {
                return this.lenField;
            }
            set
            {
                this.lenField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int offset
        {
            get
            {
                return this.offsetField;
            }
            set
            {
                this.offsetField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int total
        {
            get
            {
                return this.totalField;
            }
            set
            {
                this.totalField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userid
        {
            get
            {
                return this.useridField;
            }
            set
            {
                this.useridField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IMessenger")]
public interface IMessenger
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessenger/Login", ReplyAction="http://tempuri.org/IMessenger/LoginResponse")]
    bool Login(string userid);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessenger/Login", ReplyAction="http://tempuri.org/IMessenger/LoginResponse")]
    System.IAsyncResult BeginLogin(string userid, System.AsyncCallback callback, object asyncState);
    
    bool EndLogin(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessenger/Logout", ReplyAction="http://tempuri.org/IMessenger/LogoutResponse")]
    void Logout(string userid);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessenger/Logout", ReplyAction="http://tempuri.org/IMessenger/LogoutResponse")]
    System.IAsyncResult BeginLogout(string userid, System.AsyncCallback callback, object asyncState);
    
    void EndLogout(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessenger/GetMemberList", ReplyAction="http://tempuri.org/IMessenger/GetMemberListResponse")]
    string GetMemberList();
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessenger/GetMemberList", ReplyAction="http://tempuri.org/IMessenger/GetMemberListResponse")]
    System.IAsyncResult BeginGetMemberList(System.AsyncCallback callback, object asyncState);
    
    string EndGetMemberList(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessenger/ReceiveMemberList", ReplyAction="http://tempuri.org/IMessenger/ReceiveMemberListResponse")]
    string ReceiveMemberList();
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessenger/ReceiveMemberList", ReplyAction="http://tempuri.org/IMessenger/ReceiveMemberListResponse")]
    System.IAsyncResult BeginReceiveMemberList(System.AsyncCallback callback, object asyncState);
    
    string EndReceiveMemberList(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessenger/RequestConnect", ReplyAction="http://tempuri.org/IMessenger/RequestConnectResponse")]
    MessengerLib.ConnectionResultData RequestConnect(string userFrom, string userTo);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessenger/RequestConnect", ReplyAction="http://tempuri.org/IMessenger/RequestConnectResponse")]
    System.IAsyncResult BeginRequestConnect(string userFrom, string userTo, System.AsyncCallback callback, object asyncState);
    
    MessengerLib.ConnectionResultData EndRequestConnect(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessenger/ReceiveConnection", ReplyAction="http://tempuri.org/IMessenger/ReceiveConnectionResponse")]
    MessengerLib.ConnectionRequestData ReceiveConnection(string userid);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessenger/ReceiveConnection", ReplyAction="http://tempuri.org/IMessenger/ReceiveConnectionResponse")]
    System.IAsyncResult BeginReceiveConnection(string userid, System.AsyncCallback callback, object asyncState);
    
    MessengerLib.ConnectionRequestData EndReceiveConnection(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessenger/SendMessage", ReplyAction="http://tempuri.org/IMessenger/SendMessageResponse")]
    void SendMessage(MessengerLib.MessageData msg);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessenger/SendMessage", ReplyAction="http://tempuri.org/IMessenger/SendMessageResponse")]
    System.IAsyncResult BeginSendMessage(MessengerLib.MessageData msg, System.AsyncCallback callback, object asyncState);
    
    void EndSendMessage(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessenger/ReceiveMessage", ReplyAction="http://tempuri.org/IMessenger/ReceiveMessageResponse")]
    MessengerLib.MessageData ReceiveMessage(System.Guid userSessionGuid);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessenger/ReceiveMessage", ReplyAction="http://tempuri.org/IMessenger/ReceiveMessageResponse")]
    System.IAsyncResult BeginReceiveMessage(System.Guid userSessionGuid, System.AsyncCallback callback, object asyncState);
    
    MessengerLib.MessageData EndReceiveMessage(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessenger/SendStroke", ReplyAction="http://tempuri.org/IMessenger/SendStrokeResponse")]
    void SendStroke(MessengerLib.StrokeData data);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessenger/SendStroke", ReplyAction="http://tempuri.org/IMessenger/SendStrokeResponse")]
    System.IAsyncResult BeginSendStroke(MessengerLib.StrokeData data, System.AsyncCallback callback, object asyncState);
    
    void EndSendStroke(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessenger/ReceiveStroke", ReplyAction="http://tempuri.org/IMessenger/ReceiveStrokeResponse")]
    MessengerLib.StrokeData ReceiveStroke(System.Guid userSessionGuid);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessenger/ReceiveStroke", ReplyAction="http://tempuri.org/IMessenger/ReceiveStrokeResponse")]
    System.IAsyncResult BeginReceiveStroke(System.Guid userSessionGuid, System.AsyncCallback callback, object asyncState);
    
    MessengerLib.StrokeData EndReceiveStroke(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessenger/SendBGImgChunk", ReplyAction="http://tempuri.org/IMessenger/SendBGImgChunkResponse")]
    void SendBGImgChunk(MessengerLib.BGImgChunk data);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessenger/SendBGImgChunk", ReplyAction="http://tempuri.org/IMessenger/SendBGImgChunkResponse")]
    System.IAsyncResult BeginSendBGImgChunk(MessengerLib.BGImgChunk data, System.AsyncCallback callback, object asyncState);
    
    void EndSendBGImgChunk(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessenger/ReceiveBGImgChunk", ReplyAction="http://tempuri.org/IMessenger/ReceiveBGImgChunkResponse")]
    MessengerLib.BGImgChunk ReceiveBGImgChunk(System.Guid userSessionGuid);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessenger/ReceiveBGImgChunk", ReplyAction="http://tempuri.org/IMessenger/ReceiveBGImgChunkResponse")]
    System.IAsyncResult BeginReceiveBGImgChunk(System.Guid userSessionGuid, System.AsyncCallback callback, object asyncState);
    
    MessengerLib.BGImgChunk EndReceiveBGImgChunk(System.IAsyncResult result);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public interface IMessengerChannel : IMessenger, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public bool Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class GetMemberListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetMemberListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public string Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class ReceiveMemberListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public ReceiveMemberListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public string Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class RequestConnectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public RequestConnectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public MessengerLib.ConnectionResultData Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((MessengerLib.ConnectionResultData)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class ReceiveConnectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public ReceiveConnectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public MessengerLib.ConnectionRequestData Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((MessengerLib.ConnectionRequestData)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class ReceiveMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public ReceiveMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public MessengerLib.MessageData Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((MessengerLib.MessageData)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class ReceiveStrokeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public ReceiveStrokeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public MessengerLib.StrokeData Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((MessengerLib.StrokeData)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class ReceiveBGImgChunkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public ReceiveBGImgChunkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public MessengerLib.BGImgChunk Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((MessengerLib.BGImgChunk)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class MessengerClient : System.ServiceModel.ClientBase<IMessenger>, IMessenger
{
    
    private BeginOperationDelegate onBeginLoginDelegate;
    
    private EndOperationDelegate onEndLoginDelegate;
    
    private System.Threading.SendOrPostCallback onLoginCompletedDelegate;
    
    private BeginOperationDelegate onBeginLogoutDelegate;
    
    private EndOperationDelegate onEndLogoutDelegate;
    
    private System.Threading.SendOrPostCallback onLogoutCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetMemberListDelegate;
    
    private EndOperationDelegate onEndGetMemberListDelegate;
    
    private System.Threading.SendOrPostCallback onGetMemberListCompletedDelegate;
    
    private BeginOperationDelegate onBeginReceiveMemberListDelegate;
    
    private EndOperationDelegate onEndReceiveMemberListDelegate;
    
    private System.Threading.SendOrPostCallback onReceiveMemberListCompletedDelegate;
    
    private BeginOperationDelegate onBeginRequestConnectDelegate;
    
    private EndOperationDelegate onEndRequestConnectDelegate;
    
    private System.Threading.SendOrPostCallback onRequestConnectCompletedDelegate;
    
    private BeginOperationDelegate onBeginReceiveConnectionDelegate;
    
    private EndOperationDelegate onEndReceiveConnectionDelegate;
    
    private System.Threading.SendOrPostCallback onReceiveConnectionCompletedDelegate;
    
    private BeginOperationDelegate onBeginSendMessageDelegate;
    
    private EndOperationDelegate onEndSendMessageDelegate;
    
    private System.Threading.SendOrPostCallback onSendMessageCompletedDelegate;
    
    private BeginOperationDelegate onBeginReceiveMessageDelegate;
    
    private EndOperationDelegate onEndReceiveMessageDelegate;
    
    private System.Threading.SendOrPostCallback onReceiveMessageCompletedDelegate;
    
    private BeginOperationDelegate onBeginSendStrokeDelegate;
    
    private EndOperationDelegate onEndSendStrokeDelegate;
    
    private System.Threading.SendOrPostCallback onSendStrokeCompletedDelegate;
    
    private BeginOperationDelegate onBeginReceiveStrokeDelegate;
    
    private EndOperationDelegate onEndReceiveStrokeDelegate;
    
    private System.Threading.SendOrPostCallback onReceiveStrokeCompletedDelegate;
    
    private BeginOperationDelegate onBeginSendBGImgChunkDelegate;
    
    private EndOperationDelegate onEndSendBGImgChunkDelegate;
    
    private System.Threading.SendOrPostCallback onSendBGImgChunkCompletedDelegate;
    
    private BeginOperationDelegate onBeginReceiveBGImgChunkDelegate;
    
    private EndOperationDelegate onEndReceiveBGImgChunkDelegate;
    
    private System.Threading.SendOrPostCallback onReceiveBGImgChunkCompletedDelegate;
    
    public MessengerClient()
    {
    }
    
    public MessengerClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public MessengerClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public MessengerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public MessengerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public event System.EventHandler<LoginCompletedEventArgs> LoginCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> LogoutCompleted;
    
    public event System.EventHandler<GetMemberListCompletedEventArgs> GetMemberListCompleted;
    
    public event System.EventHandler<ReceiveMemberListCompletedEventArgs> ReceiveMemberListCompleted;
    
    public event System.EventHandler<RequestConnectCompletedEventArgs> RequestConnectCompleted;
    
    public event System.EventHandler<ReceiveConnectionCompletedEventArgs> ReceiveConnectionCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendMessageCompleted;
    
    public event System.EventHandler<ReceiveMessageCompletedEventArgs> ReceiveMessageCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendStrokeCompleted;
    
    public event System.EventHandler<ReceiveStrokeCompletedEventArgs> ReceiveStrokeCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendBGImgChunkCompleted;
    
    public event System.EventHandler<ReceiveBGImgChunkCompletedEventArgs> ReceiveBGImgChunkCompleted;
    
    public bool Login(string userid)
    {
        return base.Channel.Login(userid);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginLogin(string userid, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginLogin(userid, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public bool EndLogin(System.IAsyncResult result)
    {
        return base.Channel.EndLogin(result);
    }
    
    private System.IAsyncResult OnBeginLogin(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string userid = ((string)(inValues[0]));
        return this.BeginLogin(userid, callback, asyncState);
    }
    
    private object[] OnEndLogin(System.IAsyncResult result)
    {
        bool retVal = this.EndLogin(result);
        return new object[] {
                retVal};
    }
    
    private void OnLoginCompleted(object state)
    {
        if ((this.LoginCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.LoginCompleted(this, new LoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void LoginAsync(string userid)
    {
        this.LoginAsync(userid, null);
    }
    
    public void LoginAsync(string userid, object userState)
    {
        if ((this.onBeginLoginDelegate == null))
        {
            this.onBeginLoginDelegate = new BeginOperationDelegate(this.OnBeginLogin);
        }
        if ((this.onEndLoginDelegate == null))
        {
            this.onEndLoginDelegate = new EndOperationDelegate(this.OnEndLogin);
        }
        if ((this.onLoginCompletedDelegate == null))
        {
            this.onLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginCompleted);
        }
        base.InvokeAsync(this.onBeginLoginDelegate, new object[] {
                    userid}, this.onEndLoginDelegate, this.onLoginCompletedDelegate, userState);
    }
    
    public void Logout(string userid)
    {
        base.Channel.Logout(userid);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginLogout(string userid, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginLogout(userid, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public void EndLogout(System.IAsyncResult result)
    {
        base.Channel.EndLogout(result);
    }
    
    private System.IAsyncResult OnBeginLogout(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string userid = ((string)(inValues[0]));
        return this.BeginLogout(userid, callback, asyncState);
    }
    
    private object[] OnEndLogout(System.IAsyncResult result)
    {
        this.EndLogout(result);
        return null;
    }
    
    private void OnLogoutCompleted(object state)
    {
        if ((this.LogoutCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.LogoutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void LogoutAsync(string userid)
    {
        this.LogoutAsync(userid, null);
    }
    
    public void LogoutAsync(string userid, object userState)
    {
        if ((this.onBeginLogoutDelegate == null))
        {
            this.onBeginLogoutDelegate = new BeginOperationDelegate(this.OnBeginLogout);
        }
        if ((this.onEndLogoutDelegate == null))
        {
            this.onEndLogoutDelegate = new EndOperationDelegate(this.OnEndLogout);
        }
        if ((this.onLogoutCompletedDelegate == null))
        {
            this.onLogoutCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLogoutCompleted);
        }
        base.InvokeAsync(this.onBeginLogoutDelegate, new object[] {
                    userid}, this.onEndLogoutDelegate, this.onLogoutCompletedDelegate, userState);
    }
    
    public string GetMemberList()
    {
        return base.Channel.GetMemberList();
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginGetMemberList(System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetMemberList(callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public string EndGetMemberList(System.IAsyncResult result)
    {
        return base.Channel.EndGetMemberList(result);
    }
    
    private System.IAsyncResult OnBeginGetMemberList(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginGetMemberList(callback, asyncState);
    }
    
    private object[] OnEndGetMemberList(System.IAsyncResult result)
    {
        string retVal = this.EndGetMemberList(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetMemberListCompleted(object state)
    {
        if ((this.GetMemberListCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetMemberListCompleted(this, new GetMemberListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetMemberListAsync()
    {
        this.GetMemberListAsync(null);
    }
    
    public void GetMemberListAsync(object userState)
    {
        if ((this.onBeginGetMemberListDelegate == null))
        {
            this.onBeginGetMemberListDelegate = new BeginOperationDelegate(this.OnBeginGetMemberList);
        }
        if ((this.onEndGetMemberListDelegate == null))
        {
            this.onEndGetMemberListDelegate = new EndOperationDelegate(this.OnEndGetMemberList);
        }
        if ((this.onGetMemberListCompletedDelegate == null))
        {
            this.onGetMemberListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMemberListCompleted);
        }
        base.InvokeAsync(this.onBeginGetMemberListDelegate, null, this.onEndGetMemberListDelegate, this.onGetMemberListCompletedDelegate, userState);
    }
    
    public string ReceiveMemberList()
    {
        return base.Channel.ReceiveMemberList();
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginReceiveMemberList(System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginReceiveMemberList(callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public string EndReceiveMemberList(System.IAsyncResult result)
    {
        return base.Channel.EndReceiveMemberList(result);
    }
    
    private System.IAsyncResult OnBeginReceiveMemberList(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginReceiveMemberList(callback, asyncState);
    }
    
    private object[] OnEndReceiveMemberList(System.IAsyncResult result)
    {
        string retVal = this.EndReceiveMemberList(result);
        return new object[] {
                retVal};
    }
    
    private void OnReceiveMemberListCompleted(object state)
    {
        if ((this.ReceiveMemberListCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.ReceiveMemberListCompleted(this, new ReceiveMemberListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void ReceiveMemberListAsync()
    {
        this.ReceiveMemberListAsync(null);
    }
    
    public void ReceiveMemberListAsync(object userState)
    {
        if ((this.onBeginReceiveMemberListDelegate == null))
        {
            this.onBeginReceiveMemberListDelegate = new BeginOperationDelegate(this.OnBeginReceiveMemberList);
        }
        if ((this.onEndReceiveMemberListDelegate == null))
        {
            this.onEndReceiveMemberListDelegate = new EndOperationDelegate(this.OnEndReceiveMemberList);
        }
        if ((this.onReceiveMemberListCompletedDelegate == null))
        {
            this.onReceiveMemberListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReceiveMemberListCompleted);
        }
        base.InvokeAsync(this.onBeginReceiveMemberListDelegate, null, this.onEndReceiveMemberListDelegate, this.onReceiveMemberListCompletedDelegate, userState);
    }
    
    public MessengerLib.ConnectionResultData RequestConnect(string userFrom, string userTo)
    {
        return base.Channel.RequestConnect(userFrom, userTo);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginRequestConnect(string userFrom, string userTo, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginRequestConnect(userFrom, userTo, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public MessengerLib.ConnectionResultData EndRequestConnect(System.IAsyncResult result)
    {
        return base.Channel.EndRequestConnect(result);
    }
    
    private System.IAsyncResult OnBeginRequestConnect(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string userFrom = ((string)(inValues[0]));
        string userTo = ((string)(inValues[1]));
        return this.BeginRequestConnect(userFrom, userTo, callback, asyncState);
    }
    
    private object[] OnEndRequestConnect(System.IAsyncResult result)
    {
        MessengerLib.ConnectionResultData retVal = this.EndRequestConnect(result);
        return new object[] {
                retVal};
    }
    
    private void OnRequestConnectCompleted(object state)
    {
        if ((this.RequestConnectCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.RequestConnectCompleted(this, new RequestConnectCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void RequestConnectAsync(string userFrom, string userTo)
    {
        this.RequestConnectAsync(userFrom, userTo, null);
    }
    
    public void RequestConnectAsync(string userFrom, string userTo, object userState)
    {
        if ((this.onBeginRequestConnectDelegate == null))
        {
            this.onBeginRequestConnectDelegate = new BeginOperationDelegate(this.OnBeginRequestConnect);
        }
        if ((this.onEndRequestConnectDelegate == null))
        {
            this.onEndRequestConnectDelegate = new EndOperationDelegate(this.OnEndRequestConnect);
        }
        if ((this.onRequestConnectCompletedDelegate == null))
        {
            this.onRequestConnectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRequestConnectCompleted);
        }
        base.InvokeAsync(this.onBeginRequestConnectDelegate, new object[] {
                    userFrom,
                    userTo}, this.onEndRequestConnectDelegate, this.onRequestConnectCompletedDelegate, userState);
    }
    
    public MessengerLib.ConnectionRequestData ReceiveConnection(string userid)
    {
        return base.Channel.ReceiveConnection(userid);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginReceiveConnection(string userid, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginReceiveConnection(userid, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public MessengerLib.ConnectionRequestData EndReceiveConnection(System.IAsyncResult result)
    {
        return base.Channel.EndReceiveConnection(result);
    }
    
    private System.IAsyncResult OnBeginReceiveConnection(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string userid = ((string)(inValues[0]));
        return this.BeginReceiveConnection(userid, callback, asyncState);
    }
    
    private object[] OnEndReceiveConnection(System.IAsyncResult result)
    {
        MessengerLib.ConnectionRequestData retVal = this.EndReceiveConnection(result);
        return new object[] {
                retVal};
    }
    
    private void OnReceiveConnectionCompleted(object state)
    {
        if ((this.ReceiveConnectionCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.ReceiveConnectionCompleted(this, new ReceiveConnectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void ReceiveConnectionAsync(string userid)
    {
        this.ReceiveConnectionAsync(userid, null);
    }
    
    public void ReceiveConnectionAsync(string userid, object userState)
    {
        if ((this.onBeginReceiveConnectionDelegate == null))
        {
            this.onBeginReceiveConnectionDelegate = new BeginOperationDelegate(this.OnBeginReceiveConnection);
        }
        if ((this.onEndReceiveConnectionDelegate == null))
        {
            this.onEndReceiveConnectionDelegate = new EndOperationDelegate(this.OnEndReceiveConnection);
        }
        if ((this.onReceiveConnectionCompletedDelegate == null))
        {
            this.onReceiveConnectionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReceiveConnectionCompleted);
        }
        base.InvokeAsync(this.onBeginReceiveConnectionDelegate, new object[] {
                    userid}, this.onEndReceiveConnectionDelegate, this.onReceiveConnectionCompletedDelegate, userState);
    }
    
    public void SendMessage(MessengerLib.MessageData msg)
    {
        base.Channel.SendMessage(msg);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginSendMessage(MessengerLib.MessageData msg, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginSendMessage(msg, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public void EndSendMessage(System.IAsyncResult result)
    {
        base.Channel.EndSendMessage(result);
    }
    
    private System.IAsyncResult OnBeginSendMessage(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        MessengerLib.MessageData msg = ((MessengerLib.MessageData)(inValues[0]));
        return this.BeginSendMessage(msg, callback, asyncState);
    }
    
    private object[] OnEndSendMessage(System.IAsyncResult result)
    {
        this.EndSendMessage(result);
        return null;
    }
    
    private void OnSendMessageCompleted(object state)
    {
        if ((this.SendMessageCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.SendMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void SendMessageAsync(MessengerLib.MessageData msg)
    {
        this.SendMessageAsync(msg, null);
    }
    
    public void SendMessageAsync(MessengerLib.MessageData msg, object userState)
    {
        if ((this.onBeginSendMessageDelegate == null))
        {
            this.onBeginSendMessageDelegate = new BeginOperationDelegate(this.OnBeginSendMessage);
        }
        if ((this.onEndSendMessageDelegate == null))
        {
            this.onEndSendMessageDelegate = new EndOperationDelegate(this.OnEndSendMessage);
        }
        if ((this.onSendMessageCompletedDelegate == null))
        {
            this.onSendMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendMessageCompleted);
        }
        base.InvokeAsync(this.onBeginSendMessageDelegate, new object[] {
                    msg}, this.onEndSendMessageDelegate, this.onSendMessageCompletedDelegate, userState);
    }
    
    public MessengerLib.MessageData ReceiveMessage(System.Guid userSessionGuid)
    {
        return base.Channel.ReceiveMessage(userSessionGuid);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginReceiveMessage(System.Guid userSessionGuid, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginReceiveMessage(userSessionGuid, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public MessengerLib.MessageData EndReceiveMessage(System.IAsyncResult result)
    {
        return base.Channel.EndReceiveMessage(result);
    }
    
    private System.IAsyncResult OnBeginReceiveMessage(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        System.Guid userSessionGuid = ((System.Guid)(inValues[0]));
        return this.BeginReceiveMessage(userSessionGuid, callback, asyncState);
    }
    
    private object[] OnEndReceiveMessage(System.IAsyncResult result)
    {
        MessengerLib.MessageData retVal = this.EndReceiveMessage(result);
        return new object[] {
                retVal};
    }
    
    private void OnReceiveMessageCompleted(object state)
    {
        if ((this.ReceiveMessageCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.ReceiveMessageCompleted(this, new ReceiveMessageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void ReceiveMessageAsync(System.Guid userSessionGuid)
    {
        this.ReceiveMessageAsync(userSessionGuid, null);
    }
    
    public void ReceiveMessageAsync(System.Guid userSessionGuid, object userState)
    {
        if ((this.onBeginReceiveMessageDelegate == null))
        {
            this.onBeginReceiveMessageDelegate = new BeginOperationDelegate(this.OnBeginReceiveMessage);
        }
        if ((this.onEndReceiveMessageDelegate == null))
        {
            this.onEndReceiveMessageDelegate = new EndOperationDelegate(this.OnEndReceiveMessage);
        }
        if ((this.onReceiveMessageCompletedDelegate == null))
        {
            this.onReceiveMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReceiveMessageCompleted);
        }
        base.InvokeAsync(this.onBeginReceiveMessageDelegate, new object[] {
                    userSessionGuid}, this.onEndReceiveMessageDelegate, this.onReceiveMessageCompletedDelegate, userState);
    }
    
    public void SendStroke(MessengerLib.StrokeData data)
    {
        base.Channel.SendStroke(data);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginSendStroke(MessengerLib.StrokeData data, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginSendStroke(data, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public void EndSendStroke(System.IAsyncResult result)
    {
        base.Channel.EndSendStroke(result);
    }
    
    private System.IAsyncResult OnBeginSendStroke(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        MessengerLib.StrokeData data = ((MessengerLib.StrokeData)(inValues[0]));
        return this.BeginSendStroke(data, callback, asyncState);
    }
    
    private object[] OnEndSendStroke(System.IAsyncResult result)
    {
        this.EndSendStroke(result);
        return null;
    }
    
    private void OnSendStrokeCompleted(object state)
    {
        if ((this.SendStrokeCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.SendStrokeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void SendStrokeAsync(MessengerLib.StrokeData data)
    {
        this.SendStrokeAsync(data, null);
    }
    
    public void SendStrokeAsync(MessengerLib.StrokeData data, object userState)
    {
        if ((this.onBeginSendStrokeDelegate == null))
        {
            this.onBeginSendStrokeDelegate = new BeginOperationDelegate(this.OnBeginSendStroke);
        }
        if ((this.onEndSendStrokeDelegate == null))
        {
            this.onEndSendStrokeDelegate = new EndOperationDelegate(this.OnEndSendStroke);
        }
        if ((this.onSendStrokeCompletedDelegate == null))
        {
            this.onSendStrokeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendStrokeCompleted);
        }
        base.InvokeAsync(this.onBeginSendStrokeDelegate, new object[] {
                    data}, this.onEndSendStrokeDelegate, this.onSendStrokeCompletedDelegate, userState);
    }
    
    public MessengerLib.StrokeData ReceiveStroke(System.Guid userSessionGuid)
    {
        return base.Channel.ReceiveStroke(userSessionGuid);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginReceiveStroke(System.Guid userSessionGuid, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginReceiveStroke(userSessionGuid, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public MessengerLib.StrokeData EndReceiveStroke(System.IAsyncResult result)
    {
        return base.Channel.EndReceiveStroke(result);
    }
    
    private System.IAsyncResult OnBeginReceiveStroke(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        System.Guid userSessionGuid = ((System.Guid)(inValues[0]));
        return this.BeginReceiveStroke(userSessionGuid, callback, asyncState);
    }
    
    private object[] OnEndReceiveStroke(System.IAsyncResult result)
    {
        MessengerLib.StrokeData retVal = this.EndReceiveStroke(result);
        return new object[] {
                retVal};
    }
    
    private void OnReceiveStrokeCompleted(object state)
    {
        if ((this.ReceiveStrokeCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.ReceiveStrokeCompleted(this, new ReceiveStrokeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void ReceiveStrokeAsync(System.Guid userSessionGuid)
    {
        this.ReceiveStrokeAsync(userSessionGuid, null);
    }
    
    public void ReceiveStrokeAsync(System.Guid userSessionGuid, object userState)
    {
        if ((this.onBeginReceiveStrokeDelegate == null))
        {
            this.onBeginReceiveStrokeDelegate = new BeginOperationDelegate(this.OnBeginReceiveStroke);
        }
        if ((this.onEndReceiveStrokeDelegate == null))
        {
            this.onEndReceiveStrokeDelegate = new EndOperationDelegate(this.OnEndReceiveStroke);
        }
        if ((this.onReceiveStrokeCompletedDelegate == null))
        {
            this.onReceiveStrokeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReceiveStrokeCompleted);
        }
        base.InvokeAsync(this.onBeginReceiveStrokeDelegate, new object[] {
                    userSessionGuid}, this.onEndReceiveStrokeDelegate, this.onReceiveStrokeCompletedDelegate, userState);
    }
    
    public void SendBGImgChunk(MessengerLib.BGImgChunk data)
    {
        base.Channel.SendBGImgChunk(data);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginSendBGImgChunk(MessengerLib.BGImgChunk data, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginSendBGImgChunk(data, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public void EndSendBGImgChunk(System.IAsyncResult result)
    {
        base.Channel.EndSendBGImgChunk(result);
    }
    
    private System.IAsyncResult OnBeginSendBGImgChunk(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        MessengerLib.BGImgChunk data = ((MessengerLib.BGImgChunk)(inValues[0]));
        return this.BeginSendBGImgChunk(data, callback, asyncState);
    }
    
    private object[] OnEndSendBGImgChunk(System.IAsyncResult result)
    {
        this.EndSendBGImgChunk(result);
        return null;
    }
    
    private void OnSendBGImgChunkCompleted(object state)
    {
        if ((this.SendBGImgChunkCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.SendBGImgChunkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void SendBGImgChunkAsync(MessengerLib.BGImgChunk data)
    {
        this.SendBGImgChunkAsync(data, null);
    }
    
    public void SendBGImgChunkAsync(MessengerLib.BGImgChunk data, object userState)
    {
        if ((this.onBeginSendBGImgChunkDelegate == null))
        {
            this.onBeginSendBGImgChunkDelegate = new BeginOperationDelegate(this.OnBeginSendBGImgChunk);
        }
        if ((this.onEndSendBGImgChunkDelegate == null))
        {
            this.onEndSendBGImgChunkDelegate = new EndOperationDelegate(this.OnEndSendBGImgChunk);
        }
        if ((this.onSendBGImgChunkCompletedDelegate == null))
        {
            this.onSendBGImgChunkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendBGImgChunkCompleted);
        }
        base.InvokeAsync(this.onBeginSendBGImgChunkDelegate, new object[] {
                    data}, this.onEndSendBGImgChunkDelegate, this.onSendBGImgChunkCompletedDelegate, userState);
    }
    
    public MessengerLib.BGImgChunk ReceiveBGImgChunk(System.Guid userSessionGuid)
    {
        return base.Channel.ReceiveBGImgChunk(userSessionGuid);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginReceiveBGImgChunk(System.Guid userSessionGuid, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginReceiveBGImgChunk(userSessionGuid, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public MessengerLib.BGImgChunk EndReceiveBGImgChunk(System.IAsyncResult result)
    {
        return base.Channel.EndReceiveBGImgChunk(result);
    }
    
    private System.IAsyncResult OnBeginReceiveBGImgChunk(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        System.Guid userSessionGuid = ((System.Guid)(inValues[0]));
        return this.BeginReceiveBGImgChunk(userSessionGuid, callback, asyncState);
    }
    
    private object[] OnEndReceiveBGImgChunk(System.IAsyncResult result)
    {
        MessengerLib.BGImgChunk retVal = this.EndReceiveBGImgChunk(result);
        return new object[] {
                retVal};
    }
    
    private void OnReceiveBGImgChunkCompleted(object state)
    {
        if ((this.ReceiveBGImgChunkCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.ReceiveBGImgChunkCompleted(this, new ReceiveBGImgChunkCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void ReceiveBGImgChunkAsync(System.Guid userSessionGuid)
    {
        this.ReceiveBGImgChunkAsync(userSessionGuid, null);
    }
    
    public void ReceiveBGImgChunkAsync(System.Guid userSessionGuid, object userState)
    {
        if ((this.onBeginReceiveBGImgChunkDelegate == null))
        {
            this.onBeginReceiveBGImgChunkDelegate = new BeginOperationDelegate(this.OnBeginReceiveBGImgChunk);
        }
        if ((this.onEndReceiveBGImgChunkDelegate == null))
        {
            this.onEndReceiveBGImgChunkDelegate = new EndOperationDelegate(this.OnEndReceiveBGImgChunk);
        }
        if ((this.onReceiveBGImgChunkCompletedDelegate == null))
        {
            this.onReceiveBGImgChunkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReceiveBGImgChunkCompleted);
        }
        base.InvokeAsync(this.onBeginReceiveBGImgChunkDelegate, new object[] {
                    userSessionGuid}, this.onEndReceiveBGImgChunkDelegate, this.onReceiveBGImgChunkCompletedDelegate, userState);
    }
}
